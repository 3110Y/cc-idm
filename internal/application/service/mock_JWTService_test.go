// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/3110Y/cc-idm/internal/application/service (interfaces: ProfileServiceClientInterface,TLSInterface)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	config "github.com/3110Y/cc-idm/internal/application/config"
	gomock "github.com/golang/mock/gomock"
)

// MockProfileServiceClientInterface is a mock of ProfileServiceClientInterface interface.
type MockProfileServiceClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockProfileServiceClientInterfaceMockRecorder
}

// MockProfileServiceClientInterfaceMockRecorder is the mock recorder for MockProfileServiceClientInterface.
type MockProfileServiceClientInterfaceMockRecorder struct {
	mock *MockProfileServiceClientInterface
}

// NewMockProfileServiceClientInterface creates a new mock instance.
func NewMockProfileServiceClientInterface(ctrl *gomock.Controller) *MockProfileServiceClientInterface {
	mock := &MockProfileServiceClientInterface{ctrl: ctrl}
	mock.recorder = &MockProfileServiceClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProfileServiceClientInterface) EXPECT() *MockProfileServiceClientInterfaceMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockProfileServiceClientInterface) Login(arg0 context.Context, arg1 string, arg2 uint64, arg3 string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockProfileServiceClientInterfaceMockRecorder) Login(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockProfileServiceClientInterface)(nil).Login), arg0, arg1, arg2, arg3)
}

// MockTLSInterface is a mock of TLSInterface interface.
type MockTLSInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTLSInterfaceMockRecorder
}

// MockTLSInterfaceMockRecorder is the mock recorder for MockTLSInterface.
type MockTLSInterfaceMockRecorder struct {
	mock *MockTLSInterface
}

// NewMockTLSInterface creates a new mock instance.
func NewMockTLSInterface(ctrl *gomock.Controller) *MockTLSInterface {
	mock := &MockTLSInterface{ctrl: ctrl}
	mock.recorder = &MockTLSInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTLSInterface) EXPECT() *MockTLSInterfaceMockRecorder {
	return m.recorder
}

// NewTLS mocks base method.
func (m *MockTLSInterface) NewTLS() (*config.TLS, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewTLS")
	ret0, _ := ret[0].(*config.TLS)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewTLS indicates an expected call of NewTLS.
func (mr *MockTLSInterfaceMockRecorder) NewTLS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewTLS", reflect.TypeOf((*MockTLSInterface)(nil).NewTLS))
}
