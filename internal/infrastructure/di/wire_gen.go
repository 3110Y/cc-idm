// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/3110Y/cc-idm/internal/application/config"
	"github.com/3110Y/cc-idm/internal/application/service"
	"github.com/3110Y/cc-idm/internal/infrastructure/client"
	"github.com/3110Y/cc-idm/internal/presentation/rpc"
)

// Injectors from wire.go:

func InitializeDI() (*DI, error) {
	profileServiceClient, err := client.NewProfileServiceClient()
	if err != nil {
		return nil, err
	}
	tls, err := config.NewTLS()
	if err != nil {
		return nil, err
	}
	jwtService := service.NewJWTService(profileServiceClient, tls)
	idmRPC := rpc.NewIdmRPC(jwtService)
	di := NewDI(idmRPC, profileServiceClient, tls, jwtService)
	return di, nil
}

// wire.go:

type DI struct {
	IdmRPC               *rpc.IdmRPC
	ProfileServiceClient *client.ProfileServiceClient
	TLS                  *config.TLS
	JWTService           *service.JWTService
}

func NewDI(
	idmRPC *rpc.IdmRPC,
	profileServiceClient *client.ProfileServiceClient,
	TLS *config.TLS,
	JWTService *service.JWTService,
) *DI {
	return &DI{IdmRPC: idmRPC, ProfileServiceClient: profileServiceClient, TLS: TLS, JWTService: JWTService}
}
